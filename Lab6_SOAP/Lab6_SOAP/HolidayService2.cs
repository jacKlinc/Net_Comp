//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="HolidayService2Soap", Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CodeDescriptionBase))]
public partial class HolidayService2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetCountriesAvailableOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetHolidaysAvailableOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetHolidayDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetHolidaysForDateRangeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetHolidaysForYearOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetHolidaysForMonthOperationCompleted;
    
    /// <remarks/>
    public HolidayService2() {
        this.Url = "http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx";
    }
    
    /// <remarks/>
    public event GetCountriesAvailableCompletedEventHandler GetCountriesAvailableCompleted;
    
    /// <remarks/>
    public event GetHolidaysAvailableCompletedEventHandler GetHolidaysAvailableCompleted;
    
    /// <remarks/>
    public event GetHolidayDateCompletedEventHandler GetHolidayDateCompleted;
    
    /// <remarks/>
    public event GetHolidaysForDateRangeCompletedEventHandler GetHolidaysForDateRangeCompleted;
    
    /// <remarks/>
    public event GetHolidaysForYearCompletedEventHandler GetHolidaysForYearCompleted;
    
    /// <remarks/>
    public event GetHolidaysForMonthCompletedEventHandler GetHolidaysForMonthCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.holidaywebservice.com/HolidayService_v2/GetCountriesAvailable", RequestNamespace="http://www.holidaywebservice.com/HolidayService_v2/", ResponseNamespace="http://www.holidaywebservice.com/HolidayService_v2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CountryCode[] GetCountriesAvailable() {
        object[] results = this.Invoke("GetCountriesAvailable", new object[0]);
        return ((CountryCode[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCountriesAvailable(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCountriesAvailable", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public CountryCode[] EndGetCountriesAvailable(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CountryCode[])(results[0]));
    }
    
    /// <remarks/>
    public void GetCountriesAvailableAsync() {
        this.GetCountriesAvailableAsync(null);
    }
    
    /// <remarks/>
    public void GetCountriesAvailableAsync(object userState) {
        if ((this.GetCountriesAvailableOperationCompleted == null)) {
            this.GetCountriesAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesAvailableOperationCompleted);
        }
        this.InvokeAsync("GetCountriesAvailable", new object[0], this.GetCountriesAvailableOperationCompleted, userState);
    }
    
    private void OnGetCountriesAvailableOperationCompleted(object arg) {
        if ((this.GetCountriesAvailableCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCountriesAvailableCompleted(this, new GetCountriesAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.holidaywebservice.com/HolidayService_v2/GetHolidaysAvailable", RequestNamespace="http://www.holidaywebservice.com/HolidayService_v2/", ResponseNamespace="http://www.holidaywebservice.com/HolidayService_v2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public HolidayCode[] GetHolidaysAvailable(Country countryCode) {
        object[] results = this.Invoke("GetHolidaysAvailable", new object[] {
                    countryCode});
        return ((HolidayCode[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHolidaysAvailable(Country countryCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHolidaysAvailable", new object[] {
                    countryCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public HolidayCode[] EndGetHolidaysAvailable(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((HolidayCode[])(results[0]));
    }
    
    /// <remarks/>
    public void GetHolidaysAvailableAsync(Country countryCode) {
        this.GetHolidaysAvailableAsync(countryCode, null);
    }
    
    /// <remarks/>
    public void GetHolidaysAvailableAsync(Country countryCode, object userState) {
        if ((this.GetHolidaysAvailableOperationCompleted == null)) {
            this.GetHolidaysAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHolidaysAvailableOperationCompleted);
        }
        this.InvokeAsync("GetHolidaysAvailable", new object[] {
                    countryCode}, this.GetHolidaysAvailableOperationCompleted, userState);
    }
    
    private void OnGetHolidaysAvailableOperationCompleted(object arg) {
        if ((this.GetHolidaysAvailableCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetHolidaysAvailableCompleted(this, new GetHolidaysAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.holidaywebservice.com/HolidayService_v2/GetHolidayDate", RequestNamespace="http://www.holidaywebservice.com/HolidayService_v2/", ResponseNamespace="http://www.holidaywebservice.com/HolidayService_v2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.DateTime GetHolidayDate(Country countryCode, string holidayCode, int year) {
        object[] results = this.Invoke("GetHolidayDate", new object[] {
                    countryCode,
                    holidayCode,
                    year});
        return ((System.DateTime)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHolidayDate(Country countryCode, string holidayCode, int year, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHolidayDate", new object[] {
                    countryCode,
                    holidayCode,
                    year}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.DateTime EndGetHolidayDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.DateTime)(results[0]));
    }
    
    /// <remarks/>
    public void GetHolidayDateAsync(Country countryCode, string holidayCode, int year) {
        this.GetHolidayDateAsync(countryCode, holidayCode, year, null);
    }
    
    /// <remarks/>
    public void GetHolidayDateAsync(Country countryCode, string holidayCode, int year, object userState) {
        if ((this.GetHolidayDateOperationCompleted == null)) {
            this.GetHolidayDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHolidayDateOperationCompleted);
        }
        this.InvokeAsync("GetHolidayDate", new object[] {
                    countryCode,
                    holidayCode,
                    year}, this.GetHolidayDateOperationCompleted, userState);
    }
    
    private void OnGetHolidayDateOperationCompleted(object arg) {
        if ((this.GetHolidayDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetHolidayDateCompleted(this, new GetHolidayDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.holidaywebservice.com/HolidayService_v2/GetHolidaysForDateRange", RequestNamespace="http://www.holidaywebservice.com/HolidayService_v2/", ResponseNamespace="http://www.holidaywebservice.com/HolidayService_v2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Holiday[] GetHolidaysForDateRange(Country countryCode, System.DateTime startDate, System.DateTime endDate) {
        object[] results = this.Invoke("GetHolidaysForDateRange", new object[] {
                    countryCode,
                    startDate,
                    endDate});
        return ((Holiday[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHolidaysForDateRange(Country countryCode, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHolidaysForDateRange", new object[] {
                    countryCode,
                    startDate,
                    endDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public Holiday[] EndGetHolidaysForDateRange(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Holiday[])(results[0]));
    }
    
    /// <remarks/>
    public void GetHolidaysForDateRangeAsync(Country countryCode, System.DateTime startDate, System.DateTime endDate) {
        this.GetHolidaysForDateRangeAsync(countryCode, startDate, endDate, null);
    }
    
    /// <remarks/>
    public void GetHolidaysForDateRangeAsync(Country countryCode, System.DateTime startDate, System.DateTime endDate, object userState) {
        if ((this.GetHolidaysForDateRangeOperationCompleted == null)) {
            this.GetHolidaysForDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHolidaysForDateRangeOperationCompleted);
        }
        this.InvokeAsync("GetHolidaysForDateRange", new object[] {
                    countryCode,
                    startDate,
                    endDate}, this.GetHolidaysForDateRangeOperationCompleted, userState);
    }
    
    private void OnGetHolidaysForDateRangeOperationCompleted(object arg) {
        if ((this.GetHolidaysForDateRangeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetHolidaysForDateRangeCompleted(this, new GetHolidaysForDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.holidaywebservice.com/HolidayService_v2/GetHolidaysForYear", RequestNamespace="http://www.holidaywebservice.com/HolidayService_v2/", ResponseNamespace="http://www.holidaywebservice.com/HolidayService_v2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Holiday[] GetHolidaysForYear(Country countryCode, int year) {
        object[] results = this.Invoke("GetHolidaysForYear", new object[] {
                    countryCode,
                    year});
        return ((Holiday[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHolidaysForYear(Country countryCode, int year, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHolidaysForYear", new object[] {
                    countryCode,
                    year}, callback, asyncState);
    }
    
    /// <remarks/>
    public Holiday[] EndGetHolidaysForYear(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Holiday[])(results[0]));
    }
    
    /// <remarks/>
    public void GetHolidaysForYearAsync(Country countryCode, int year) {
        this.GetHolidaysForYearAsync(countryCode, year, null);
    }
    
    /// <remarks/>
    public void GetHolidaysForYearAsync(Country countryCode, int year, object userState) {
        if ((this.GetHolidaysForYearOperationCompleted == null)) {
            this.GetHolidaysForYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHolidaysForYearOperationCompleted);
        }
        this.InvokeAsync("GetHolidaysForYear", new object[] {
                    countryCode,
                    year}, this.GetHolidaysForYearOperationCompleted, userState);
    }
    
    private void OnGetHolidaysForYearOperationCompleted(object arg) {
        if ((this.GetHolidaysForYearCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetHolidaysForYearCompleted(this, new GetHolidaysForYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.holidaywebservice.com/HolidayService_v2/GetHolidaysForMonth", RequestNamespace="http://www.holidaywebservice.com/HolidayService_v2/", ResponseNamespace="http://www.holidaywebservice.com/HolidayService_v2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Holiday[] GetHolidaysForMonth(Country countryCode, int year, int month) {
        object[] results = this.Invoke("GetHolidaysForMonth", new object[] {
                    countryCode,
                    year,
                    month});
        return ((Holiday[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHolidaysForMonth(Country countryCode, int year, int month, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHolidaysForMonth", new object[] {
                    countryCode,
                    year,
                    month}, callback, asyncState);
    }
    
    /// <remarks/>
    public Holiday[] EndGetHolidaysForMonth(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Holiday[])(results[0]));
    }
    
    /// <remarks/>
    public void GetHolidaysForMonthAsync(Country countryCode, int year, int month) {
        this.GetHolidaysForMonthAsync(countryCode, year, month, null);
    }
    
    /// <remarks/>
    public void GetHolidaysForMonthAsync(Country countryCode, int year, int month, object userState) {
        if ((this.GetHolidaysForMonthOperationCompleted == null)) {
            this.GetHolidaysForMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHolidaysForMonthOperationCompleted);
        }
        this.InvokeAsync("GetHolidaysForMonth", new object[] {
                    countryCode,
                    year,
                    month}, this.GetHolidaysForMonthOperationCompleted, userState);
    }
    
    private void OnGetHolidaysForMonthOperationCompleted(object arg) {
        if ((this.GetHolidaysForMonthCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetHolidaysForMonthCompleted(this, new GetHolidaysForMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public partial class CountryCode : CodeDescriptionBase {
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegionCode))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HolidayCode))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryCode))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public abstract partial class CodeDescriptionBase {
    
    private string codeField;
    
    private string descriptionField;
    
    /// <remarks/>
    public string Code {
        get {
            return this.codeField;
        }
        set {
            this.codeField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public partial class Holiday {
    
    private Country countryField;
    
    private string holidayCodeField;
    
    private string descriptorField;
    
    private HolidayType holidayTypeField;
    
    private HolidayDateType dateTypeField;
    
    private BankHoliday bankHolidayField;
    
    private System.DateTime dateField;
    
    private string relatedHolidayCodeField;
    
    private RegionCode[] applicableRegionsField;
    
    /// <remarks/>
    public Country Country {
        get {
            return this.countryField;
        }
        set {
            this.countryField = value;
        }
    }
    
    /// <remarks/>
    public string HolidayCode {
        get {
            return this.holidayCodeField;
        }
        set {
            this.holidayCodeField = value;
        }
    }
    
    /// <remarks/>
    public string Descriptor {
        get {
            return this.descriptorField;
        }
        set {
            this.descriptorField = value;
        }
    }
    
    /// <remarks/>
    public HolidayType HolidayType {
        get {
            return this.holidayTypeField;
        }
        set {
            this.holidayTypeField = value;
        }
    }
    
    /// <remarks/>
    public HolidayDateType DateType {
        get {
            return this.dateTypeField;
        }
        set {
            this.dateTypeField = value;
        }
    }
    
    /// <remarks/>
    public BankHoliday BankHoliday {
        get {
            return this.bankHolidayField;
        }
        set {
            this.bankHolidayField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime Date {
        get {
            return this.dateField;
        }
        set {
            this.dateField = value;
        }
    }
    
    /// <remarks/>
    public string RelatedHolidayCode {
        get {
            return this.relatedHolidayCodeField;
        }
        set {
            this.relatedHolidayCodeField = value;
        }
    }
    
    /// <remarks/>
    public RegionCode[] ApplicableRegions {
        get {
            return this.applicableRegionsField;
        }
        set {
            this.applicableRegionsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public enum Country {
    
    /// <remarks/>
    Canada,
    
    /// <remarks/>
    GreatBritain,
    
    /// <remarks/>
    IrelandNorthern,
    
    /// <remarks/>
    IrelandRepublicOf,
    
    /// <remarks/>
    Scotland,
    
    /// <remarks/>
    UnitedStates,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public enum HolidayType {
    
    /// <remarks/>
    Notable,
    
    /// <remarks/>
    Religious,
    
    /// <remarks/>
    NotableReligious,
    
    /// <remarks/>
    Other,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public enum HolidayDateType {
    
    /// <remarks/>
    Observed,
    
    /// <remarks/>
    Actual,
    
    /// <remarks/>
    ObservedActual,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public enum BankHoliday {
    
    /// <remarks/>
    Recognized,
    
    /// <remarks/>
    NotRecognized,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public partial class RegionCode : CodeDescriptionBase {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.holidaywebservice.com/HolidayService_v2/")]
public partial class HolidayCode : CodeDescriptionBase {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetCountriesAvailableCompletedEventHandler(object sender, GetCountriesAvailableCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCountriesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCountriesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CountryCode[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CountryCode[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetHolidaysAvailableCompletedEventHandler(object sender, GetHolidaysAvailableCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetHolidaysAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetHolidaysAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public HolidayCode[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((HolidayCode[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetHolidayDateCompletedEventHandler(object sender, GetHolidayDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetHolidayDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetHolidayDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.DateTime Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.DateTime)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetHolidaysForDateRangeCompletedEventHandler(object sender, GetHolidaysForDateRangeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetHolidaysForDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetHolidaysForDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Holiday[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Holiday[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetHolidaysForYearCompletedEventHandler(object sender, GetHolidaysForYearCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetHolidaysForYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetHolidaysForYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Holiday[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Holiday[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetHolidaysForMonthCompletedEventHandler(object sender, GetHolidaysForMonthCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetHolidaysForMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetHolidaysForMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Holiday[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Holiday[])(this.results[0]));
        }
    }
}
